kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    k8s-app: calico-node
spec:
  selector:
    matchLabels:
      k8s-app: calico-node
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: calico-node
      annotations:
        # This, along with the CriticalAddonsOnly toleration below,
        # marks the pod as a critical add-on, ensuring it gets
        # priority scheduling and that its resources are reserved
        # if it ever gets evicted.
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      hostNetwork: {{ .Values.spec.hostNetwork }}
      nodeSelector:
        beta.kubernetes.io/os: linux
      serviceAccountName: {{ .Values.spec.serviceAccountName }}
      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a "force
      # deletion": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.
      terminationGracePeriodSeconds: {{ .Values.spec.terminationGracePeriodSeconds }}
      containers:
        # Runs calico/node container on each Kubernetes node.  This
        # container programs network policy and routes on each
        # host.
        - name: calico-node
          image: {{ .Values.image.node }}
          env:
            # Use Kubernetes API as the backing datastore.
            - name: DATASTORE_TYPE
              value: {{ .Values.env.DATASTORE_TYPE | quote }}
            # Use eni not cali for interface prefix
            - name: FELIX_INTERFACEPREFIX
              value: {{ .Values.env.FELIX_INTERFACEPREFIX | quote }}
            # Enable felix info logging.
            - name: FELIX_LOGSEVERITYSCREEN
              value: {{ .Values.env.FELIX_LOGSEVERITYSCREEN | quote }}
            # Don't enable BGP.
            - name: CALICO_NETWORKING_BACKEND
              value: {{ .Values.env.CALICO_NETWORKING_BACKEND | quote }}
            # Cluster type to identify the deployment type
            - name: CLUSTER_TYPE
              value: {{ .Values.env.CLUSTER_TYPE | quote }}
            # Disable file logging so `kubectl logs` works.
            - name: CALICO_DISABLE_FILE_LOGGING
              value: {{ .Values.env.CALICO_DISABLE_FILE_LOGGING | quote }}
            - name: FELIX_TYPHAK8SSERVICENAME
              value: {{ .Values.env.FELIX_TYPHAK8SSERVICENAME | quote }}
            # Set Felix endpoint to host default action to ACCEPT.
            - name: FELIX_DEFAULTENDPOINTTOHOSTACTION
              value: {{ .Values.env.FELIX_DEFAULTENDPOINTTOHOSTACTION | quote }}
            - name: FELIX_IPTABLESMANGLEALLOWACTION
              value: {{ .Values.env.FELIX_IPTABLESMANGLEALLOWACTION | quote }}
            # Disable IPV6 on Kubernetes.
            - name: FELIX_IPV6SUPPORT
              value: {{ .Values.env.FELIX_IPV6SUPPORT | quote }}
            # Wait for the datastore.
            - name: WAIT_FOR_DATASTORE
              value: {{ .Values.env.WAIT_FOR_DATASTORE | quote }}
            - name: FELIX_LOGSEVERITYSYS
              value: {{ .Values.env.FELIX_LOGSEVERITYSYS | quote }}
            - name: FELIX_PROMETHEUSMETRICSENABLED
              value: {{ .Values.env.FELIX_PROMETHEUSMETRICSENABLED | quote }}
            - name: NO_DEFAULT_POOLS
              value: {{ .Values.env.NO_DEFAULT_POOLS | quote }}
            # Set based on the k8s node name.
            - name: NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            # No IP address needed.
            - name: IP
              value: ""
            - name: FELIX_HEALTHENABLED
              value: "true"
          securityContext:
            privileged: true
          livenessProbe:
            httpGet:
              path: /liveness
              port: 9099
              host: localhost
            periodSeconds: 10
            initialDelaySeconds: 10
            failureThreshold: {{ .Values.failureThreshold }}
          readinessProbe:
            exec:
              command:
              - /bin/calico-node
              - -felix-ready
            periodSeconds: 10
          volumeMounts:
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
              readOnly: false
            - mountPath: /var/run/calico
              name: var-run-calico
              readOnly: false
            - mountPath: /var/lib/calico
              name: var-lib-calico
              readOnly: false
      volumes:
        # Used to ensure proper kmods are installed.
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: var-run-calico
          hostPath:
            path: /var/run/calico
        - hostPath:
            path: /var/lib/calico
          name: var-lib-calico
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
